package kr.or.kosta.and1020_sqlite;

import kr.or.kosta.and1020_sqllite.R;
import android.app.Activity;
import android.app.Service;
import android.location.Criteria;
import android.location.Location;
import android.location.LocationListener;
import android.location.LocationManager;
import android.os.Bundle;
import android.widget.TextView;

public class OnlyGeoLocation extends Activity{
	// 자신의 현재 위치를 얻어내기 위해서 LocationManager를 생성함
	LocationManager manager;
	
	LatLng MYLOC;
	
	TextView txtTime, txtBearing, txtSpeed, txtAltitude, txtProvider;
	String locationProvider;
	String provider;
	String str_my_altitude, str_my_longitude;
	
	LocationListener sLocationListener = null;
	Location location;
	
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.onlygeo);
		//엘티투드:고도
		txtAltitude = (TextView) findViewById(R.id.altitude);
		txtSpeed = (TextView) findViewById(R.id.speed);
		txtBearing = (TextView) findViewById(R.id.bearing);
		txtTime = (TextView) findViewById(R.id.time);
		txtProvider = (TextView) findViewById(R.id.provider);
		
		// 1.LocationManager객체를 생성한다.
		if(manager == null){
			manager = (LocationManager) getSystemService(Service.LOCATION_SERVICE);
		}
		if(sLocationListener == null){
			sLocationListener = new MyLocationListener();
		}
		// 크라이테리어를 생성해서
		Criteria criteria = new Criteria();
		// GPS로부터 정확한 정보를 구하기 위해서 정밀도를 높인다.
		criteria.setAccuracy(Criteria.ACCURACY_FINE);
		criteria.setAltitudeRequired(true);
		criteria.setBearingRequired(true);
		criteria.setSpeedRequired(true);
		
		// 3.위의 설정을 프로바이더에게 넘겨준다. 2번째 인자 true는
		// 활성화 되었을 때만 정보를 얻어온다.
		provider = manager.getBestProvider(criteria, true);
		// provider,주기,거리,감지자, 3초당 3미터거리
		manager.requestLocationUpdates(provider, 3000, 3, sLocationListener);
		location = manager.getLastKnownLocation(provider);
		
	}
}
